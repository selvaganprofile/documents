<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
	   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
  	
 	<context:component-scan base-package="
		com.vu.au.jobrunner
		com.vu.au.validation
		com.vu.au.helpers
		com.vu.stornext" />
		
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	<bean id="trustAllCertificates" class="com.vu.au.jobrunner.route.callback.utils.TrustAllCertificates" />
	<bean id="allowAllHostnameVerifier" class="org.apache.http.conn.ssl.AllowAllHostnameVerifier" />
		
  	<camelContext xmlns="http://camel.apache.org/schema/spring" useMDCLogging="true">
    	<camel:package>com.vu.au.jobrunner.route</camel:package>
    	<camel:package>com.vu.au.jobrunner.messaging.route</camel:package>
    	<routeBuilder ref="fileManagerRoute" />
    	<routeBuilder ref="fileTransferRoute" />
    	<routeBuilder ref="mediaValidationRoute" />
    	<routeBuilder ref="packagerRoute" />
    	<routeBuilder ref="pmeEncryptorRoute" />
    	<routeBuilder ref="dummyRoute" />
    	<routeBuilder ref="m3u8BitrateSelectorRoute" />
    	<routeBuilder ref="stornextRoute" />
    	<routeBuilder ref="rtvodRoute" />
    	<routeBuilder ref="checksumUpdateRoute" />
    	<routeBuilder ref="adonissCallbackRoute" />
	  	<threadPoolProfile id="defaultThreadPoolProfile" defaultProfile="true"
	              poolSize="15" maxPoolSize="100" maxQueueSize="1000" allowCoreThreadTimeOut="false"
	              rejectedPolicy="CallerRuns"/>
  	</camelContext>
  	
	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop">
		<property name="connectionFactory" ref="jmsConnectionFactory" />
		<property name="maximumActiveSessionPerConnection" value="${jobrunner.message.broker.max.active.sessions}" />
		<property name="maxConnections" value="${jobrunner.message.broker.max.connections}" />
	</bean>
	
	<bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="${jobrunner.message.broker.url}&amp;timeout=${jobrunner.message.broker.timeout:#{10000}}&amp;randomize=false"/>
		<property name="redeliveryPolicy" ref="redeliveryPolicy" />
	</bean>
  	
	<bean id="redeliveryPolicy" class="org.apache.activemq.RedeliveryPolicy">
	    <property name="maximumRedeliveries" value="${jobrunner.message.broker.maximum.redeliveries}" />
	    <property name="redeliveryDelay" value="${jobrunner.message.broker.redelivery.delay}" />
	</bean>	
	
	<bean id="jmsTransactionManager" class="org.springframework.jms.connection.JmsTransactionManager">
		<property name="connectionFactory" ref="pooledConnectionFactory"/>
	</bean>
	
	<bean id="jmsProducerTemplate" class="org.springframework.jms.core.JmsTemplate"
	      p:connectionFactory-ref="pooledConnectionFactory" />
	      
	<bean id="jmsComponent" class="org.apache.activemq.camel.component.ActiveMQComponent">
		<property name="connectionFactory" ref="pooledConnectionFactory"/>
		<property name="transactionManager" ref="jmsTransactionManager"/>
		<property name="concurrentConsumers" value="${jobrunner.message.broker.concurrent.consumers}"/>		
		<property name="usePooledConnection" value="true" />		
	</bean>
	
	<bean id="required" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
	  <property name="transactionManager" ref="jmsTransactionManager"/>
	</bean>

	<bean id="stornextFactory" class="com.vu.stornext.StornextServiceFactory" />

</beans>